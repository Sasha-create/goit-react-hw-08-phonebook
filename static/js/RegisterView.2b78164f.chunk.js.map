{"version":3,"sources":["views/RegisterView/RegisterView.module.css","views/RegisterView/RegisterView.js"],"names":["module","exports","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","onSubmit","className","s","form","autoComplete","label","type","onChange","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,8B,mICItDC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,gCACE,qJAEA,uBACEW,SAAUD,KAAKL,aACfO,UAAWC,IAAEC,KACbC,aAAa,MAHf,UAKE,wBAAOH,UAAWC,IAAEG,MAApB,+BAEE,uBACEC,KAAK,OACLnB,KAAK,OACLK,MAAOL,EACPoB,SAAUR,KAAKT,kBAInB,wBAAOW,UAAWC,IAAEG,MAApB,2CAEE,uBACEC,KAAK,QACLnB,KAAK,QACLK,MAAOJ,EACPmB,SAAUR,KAAKT,kBAInB,wBAAOW,UAAWC,IAAEG,MAApB,iDAEE,uBACEC,KAAK,WACLnB,KAAK,WACLK,MAAOH,EACPkB,SAAUR,KAAKT,kBAInB,wBAAQgB,KAAK,SAAb,oI,GA7DiBE,aAoErBC,EAAqB,CACzBX,WAAYY,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkC3B","file":"static/js/RegisterView.2b78164f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterView_form__2rONq\",\"label\":\"RegisterView_label__3ZQkC\"};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport s from './RegisterView.module.css';\n\nclass RegisterView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div>\n        <h1>Страница регистрации</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          className={s.form}\n          autoComplete=\"off\"\n        >\n          <label className={s.label}>\n            Имя\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className={s.label}>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className={s.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Зарегистрироваться</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}